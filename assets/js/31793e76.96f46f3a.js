"use strict";(self.webpackChunkcloud3_docs=self.webpackChunkcloud3_docs||[]).push([[431],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=i,g=m["".concat(p,".").concat(u)]||m[u]||c[u]||r;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8009:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var a=n(3117),i=(n(7294),n(3905)),r=n(4996);const o={id:"w3auth",title:"",hide_table_of_contents:!1},s=void 0,p={unversionedId:"w3auth",id:"w3auth",title:"",description:"Introduction",source:"@site/docs/w3auth.mdx",sourceDirName:".",slug:"/w3auth",permalink:"/w3auth",draft:!1,tags:[],version:"current",frontMatter:{id:"w3auth",title:"",hide_table_of_contents:!1},sidebar:"mySidebar",previous:{title:"",permalink:"/"},next:{title:"",permalink:"/w3bucket/nft"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Typed Data to Sign",id:"typed-data-to-sign",level:2},{value:"MetaMask Signing",id:"metamask-signing",level:2},{value:"Sample Code",id:"sample-code",level:2},{value:"Reference",id:"reference",level:2}],c={toc:d};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"W3Auth Tokens")," are Http Bearer Tokens used to authentication against Cloud3 Http APIs."),(0,i.kt)("p",null,"The format of Cloud3 Http API headers is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Authorization: Bearer <W3Auth Token>\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"W3Auth Tokens")," are generated in following approach: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"base64(JSON.stringify({\n  data: <Typed Data to Sign>,\n  signature: <Typed Data Signature>\n}))\n")),(0,i.kt)("p",null,"The essential part of a W3Auth Token is a typed data and its ethereum signature in compliance with ",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-712"},"EIP712"),"."),(0,i.kt)("h2",{id:"typed-data-to-sign"},"Typed Data to Sign"),(0,i.kt)("p",null,"Below is a sample ",(0,i.kt)("em",{parentName:"p"},"typed data")," to sign:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"{\n  domain: {\n    chainId: '1',\n    name: 'cloud3.cc',\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n    version: '1',\n  },\n  message: {\n    description: 'Sign for W3 Bucket Access Authentication',\n    signingAddress: '0x2E189548D45E24A84CDD8270B5A38071B4dA325D',\n    tokenAddress: '0xB0B0b0b0b0b0B000000000000000000000000000',\n    tokenID: '1000001',\n    effectiveTimestamp: 1665386666,\n    expirationTimestamp: 0\n  },\n  primaryType: 'W3Bucket',\n  types: {\n    W3Bucket: [\n      { name: 'description', type: 'string' },\n      { name: 'signingAddress', type: 'address' },\n      { name: 'tokenAddress', type: 'address' },\n      { name: 'tokenId', type: 'string' },\n      { name: 'effectiveTimestamp', type: 'uint256' },\n      { name: 'expirationTimestamp', type: 'uint256' },\n    ],\n  },\n};\n")),(0,i.kt)("p",null,"where"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"domain",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"chainId"),": Chaid ID of Ethereum-compatible blockchain, which are defined by ",(0,i.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-155"},"EIP-155")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name"),":  Name of the dapp where the signature is generated"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verifyingContract"),": Address of the smart contract that are intended to verify the signature"))),(0,i.kt)("li",{parentName:"ul"},"message",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"signingAddress"),": Account address to sign the typed data"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tokenAddress"),": Contract address of the W3Bucket NFT"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tokenId"),": W3Bucket token ID"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"effectiveTimestamp"),": Unix timestamp (seconds since 1970-01-01 00:00:00 UTC) when the signature will be valid from"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"expirationTimestamp"),": Unix timestamp  (seconds since 1970-01-01 00:00:00 UTC) when the signature will expire. ",(0,i.kt)("inlineCode",{parentName:"li"},"0")," for never expire")))),(0,i.kt)("p",null,"Cloud3 API services will perform a series validations against a W3Auth Token:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Verify ",(0,i.kt)("inlineCode",{parentName:"li"},"signature")," is signed by ",(0,i.kt)("inlineCode",{parentName:"li"},"data.message.signingAddress")),(0,i.kt)("li",{parentName:"ul"},"Verify ",(0,i.kt)("inlineCode",{parentName:"li"},"data.message.signingAddress")," is the owner of NFT token specified by ",(0,i.kt)("inlineCode",{parentName:"li"},"data.message.tokenAddress")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"data.message.tokenId")),(0,i.kt)("li",{parentName:"ul"},"Verify ",(0,i.kt)("inlineCode",{parentName:"li"},"signature")," is still valid via ",(0,i.kt)("inlineCode",{parentName:"li"},"data.message.effectiveTimestamp")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"data.message.expirationTimestamp")),(0,i.kt)("li",{parentName:"ul"},"Verify ",(0,i.kt)("inlineCode",{parentName:"li"},"data.message.chainId")," match the chain on which the NFT contract is deployed")),(0,i.kt)("h2",{id:"metamask-signing"},"MetaMask Signing"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-712"},"EIP712")," ",(0,i.kt)("em",{parentName:"p"},"typed data")," could be signed using ",(0,i.kt)("a",{parentName:"p",href:"https://docs.metamask.io/guide/signing-data.html#signing-data"},"MetaMask"),"."),(0,i.kt)("p",null,"Below is a sample signing dialog MetaMask shows when signing a ",(0,i.kt)("em",{parentName:"p"},"typed data"),":"),(0,i.kt)("img",{src:(0,r.Z)("/img/w3bucket-signing.jpeg")}),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"sample-code"},"Sample Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const typedData = {\n  domain: {\n    chainId: '1',\n    name: 'cloud3.cc',\n    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n    version: '1',\n  },\n  message: {\n    description: 'Sign for W3 Bucket Access Authentication',\n    signingAddress: '0x2E189548D45E24A84CDD8270B5A38071B4dA325D',\n    tokenAddress: '0xB0B0b0b0b0b0B000000000000000000000000000',\n    tokenId: '1000001',\n    effectiveTimestamp: 1665386666,\n    expirationTimestamp: 0\n  },\n  primaryType: 'W3Bucket',\n  types: {\n    W3Bucket: [\n      { name: 'description', type: 'string' },\n      { name: 'signingAddress', type: 'address' },\n      { name: 'tokenAddress', type: 'address' },\n      { name: 'tokenId', type: 'string' },\n      { name: 'effectiveTimestamp', type: 'uint256' },\n      { name: 'expirationTimestamp', type: 'uint256' },\n    ],\n  },\n};\n\n// Sign\nconst signature = await provider.getSigner(account)._signTypedData(typedData.domain, typedData.types, typedData.message);\nconsole.log('signature', signature);\n\n// Verify Signature\nconst hash = ethers.utils._TypedDataEncoder.hash(typedData.domain, typedData.types, typedData.message);\nconsole.log('hash', hash);\nconst recoverAddress = ethers.utils.recoverAddress(hash, signature);\nconsole.log('recoverAddress', recoverAddress);\nconsole.log(`signature valid: ${recoverAddress == account}`);\n\n// Generate Bearer Token\nconst bearerTokenData = {\n  data: typedData,\n  signature: signature\n};\nconst bearerToken = window.btoa(JSON.stringify(bearerTokenData));\nconsole.log('Bearer token', bearerToken);\nconsole.log('Bearer token decoded', JSON.parse(window.atob(bearerToken)));\n")),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-712"},"https://eips.ethereum.org/EIPS/eip-712")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.metamask.io/guide/signing-data.html#signing-data"},"https://docs.metamask.io/guide/signing-data.html#signing-data")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://medium.com/metamask/eip712-is-coming-what-to-expect-and-how-to-use-it-bb92fd1a7a26"},"https://medium.com/metamask/eip712-is-coming-what-to-expect-and-how-to-use-it-bb92fd1a7a26"))))}m.isMDXComponent=!0}}]);